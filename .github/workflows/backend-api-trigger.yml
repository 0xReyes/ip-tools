name: Backend API Triggered Action

on:
  workflow_dispatch:
    inputs:
      tool_command:
        description: 'IP diagnostic tool to run (dig, nslookup, ping, whois, traceroute, nc, curl, telnet, nmap)'
        required: true
        type: string
      target_host:
        description: 'Target domain or IP address'
        required: true
        type: string
      dispatch_id:
        description: 'UUID for request tracking'
        required: true
        type: string

jobs:
  process-ip-tool:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/0xreyes/ip-tools:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    steps:
      - name: Execute IP diagnostic tool
        run: |
          TOOL="${{ inputs.tool_command }}"
          TARGET="${{ inputs.target_host }}"
          DISPATCH_ID="${{ inputs.dispatch_id }}"
          OUTPUT_FILE=".diagnostic_logs/${DISPATCH_ID}.txt"

          echo "Running $TOOL for $TARGET (Dispatch ID: $DISPATCH_ID)"
          mkdir -p .diagnostic_logs

          {
            echo "##[group]"
            case "$TOOL" in
              dig)
                dig "$TARGET" 2>&1
                ;;
              nslookup)
                nslookup "$TARGET" 2>&1
                ;;
              ping)
                ping -c 2 "$TARGET" 2>&1
                ;;
              whois)
                whois "$TARGET" 2>&1 | head -n 5
                ;;
              traceroute)
                traceroute -w 1 -m 5 "$TARGET" 2>&1
                ;;
              nc)
                nc -zv "$TARGET" 80 2>&1
                ;;
              curl)
                curl --connect-timeout 5 --max-time 10 -v "$TARGET" 2>&1
                ;;
              telnet)
                telnet "$TARGET" 80 < /dev/null 2>&1
                ;;
              nmap)
                nmap -F "$TARGET" 2>&1
                ;;
              *)
                echo "❌ Unsupported tool: $TOOL" 2>&1
                exit 1
                ;;
            esac
            echo "##[endgroup]"
          } | tee "$OUTPUT_FILE" 2>&1
        continue-on-error: true

      - name: Upload diagnostic result
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.dispatch_id }}
          path: .diagnostic_logs/${{ inputs.dispatch_id }}.txt